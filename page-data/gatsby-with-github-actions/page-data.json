{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/gatsby-with-github-actions","result":{"data":{"post":{"__typename":"MdxPost","slug":"/gatsby-with-github-actions","title":"How to publish a Gatsby site on Github Pages using Github Actions","date":"21.02.2020","tags":null,"description":null,"canonicalUrl":"https://random-blog-about-curses.com","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to publish a Gatsby site on Github Pages using Github Actions\",\n  \"date\": \"2020-02-21T00:00:00.000Z\",\n  \"slug\": \"/gatsby-with-github-actions\",\n  \"canonicalUrl\": \"https://random-blog-about-curses.com\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.gatsbyjs.com/\"\n  }, \"Gatsby\"), \" appear to be the static site generator with the most traction, by far. I was delighted with how fast\\nand easy it was to generate a decent looking site for Tab Groupie.\"), mdx(\"p\", null, \"However I also needed to build and host the site. As the site is about some software beeing developed on Github\\nis was quite natural to build using GitHub Actions and host on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pages.github.com/\"\n  }, \"GitHub Pages\"), \".\"), mdx(\"p\", null, \"I made a couple of design choices:\"), mdx(\"h3\", null, \"Monorepo\"), mdx(\"p\", null, \"The sources for the Gatsby site are version controlled in the very same GitHub repo as the software. This will\\nmake it possible to write documentation and code in lockstep. It appears as Gatsby by default assumes that it'll live\\nby its own in the root of a repo, but it was quite content to live in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/nordstrand/tab-groupie/tree/master/site\"\n  }, \"/site\"), \"\\nsubfolder after twisting some knobs.\"), mdx(\"h3\", null, \"No third-party actions\"), mdx(\"p\", null, \"I'd really like to use no third-party actions in my GitHub Actions workflow. Third-party actions would in my case\\nneed to have write access to the repo, introducing a significant vector of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Supply_chain_attack\"\n  }, \"Supply chain attacks\"), \".\\nThe threat model goes something like this: the author of a GitHub Action gets hacked and the attacker introduce\\nmalicious code in the action that e.g. steals the access token of the users of said action. \"), mdx(\"p\", null, \"Pinning usage of the action to a certain known good tag \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://julienrenaux.fr/2019/12/20/github-actions-security-risk/\"\n  }, \"will not really help\"), \"\\nas tags could be trivially overwritten by the attacker in this case. You could pin on\\na git SHA-1, but in light of recent years \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://shattered.io/\"\n  }, \"SHA-1 collision attacks\"), \" this also feels somewhat dubious.\"), mdx(\"h3\", null, \"Minimize version control of derived data\"), mdx(\"p\", null, \"Gatsby builds a static site from basically markdown source files. The build product needs to checked into the git repo\\nin order for GitHub Pages to serve it. I really don't like to bloat my repos by keeping derived data under version\\ncontrol. However, by keeping the build product on a seperate branch the tip of which gets amended and forced pushed\\non every build, I'll only ever have \", mdx(\"i\", null, \"one\"), \" - the most recent - version of the site checked in.\"), mdx(\"h3\", null, \"My GitHub actions Workflow\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: publish-site\\n\\non:\\n  push:\\n    branches:\\n      master\\n\\njobs:\\n  build:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: checkout master branch\\n        uses: actions/checkout@v2\\n        with:\\n          ref: master\\n          persist-credentials: false\\n\\n      - name: build site from sources\\n        run: |\\n          cd site\\n          npm install\\n          npm run-script build\\n\\n      - name: clone and checkout gh-pages branch\\n        uses: actions/checkout@v2\\n        with:\\n          ref: gh-pages\\n          persist-credentials: true\\n          path: temp          \\n\\n      - name: move site sources to gh-pages clone\\n        run: |\\n          find temp/ -mindepth 1  -maxdepth 1 ! -name .git -exec rm -rvf {} \\\\;\\n          mv site/public/* temp/\\n\\n      - name: push gh-pages branch\\n        run: |\\n          cd temp/\\n          git config user.name github-actions\\n          git config user.email github-actions@github.com\\n          git add .\\n          git commit --amend -m \\\"Generated $(date) from $GITHUB_SHA\\\"\\n          git push --force origin gh-pages\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Gatsby  appear to be the static site generator with the most traction, by far. I was delighted with how fast\nand easy it was to generate aâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/gatsby-with-github-actions","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}